const moment = require('moment');
const DataUtils = require('./dataUtils');

class MessageUtils {
    static formatAppointmentMessage(appointment) {
        return `
            üìÖ –ó–∞–ø–∏—Å—å –Ω–∞ ${DataUtils.formatDateTime(appointment.startTime)}
            
            üë§ –ö–ª–∏–µ–Ω—Ç: ${appointment.clientName}
            üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${appointment.clientPhone}
            üíá –£—Å–ª—É–≥–∞: ${appointment.serviceName}
            ‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${appointment.duration} –º–∏–Ω
            üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${DataUtils.formatPrice(appointment.price)}
            
            ${appointment.notes ? `üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: ${appointment.notes}` : ''}
        `.trim();
    }

    static formatScheduleMessage(schedule) {
        const groupedByDate = DataUtils.groupByDate(schedule);
        
        return Object.entries(groupedByDate)
            .map(([date, appointments]) => {
                const formattedDate = moment(date).format('DD.MM.YYYY');
                const appointmentsList = appointments
                    .map(apt => `${apt.time} - ${apt.clientName} (${apt.serviceName})`)
                    .join('\n');

                return `
                    üìÖ ${formattedDate}
                    ${appointmentsList}
                `.trim();
            })
            .join('\n\n');
    }

    static formatStatisticsMessage(stats) {
        return `
            üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

            üí∞ –î–æ—Ö–æ–¥: ${DataUtils.formatPrice(stats.revenue)}
            üë• –ö–ª–∏–µ–Ω—Ç–æ–≤: ${stats.clientsCount}
            ‚úÖ –ó–∞–ø–∏—Å–µ–π: ${stats.appointmentsCount}
            ‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: ${stats.averageRating}
            
            –¢–æ–ø —É—Å–ª—É–≥:
            ${stats.topServices
                .map(s => `${s.name}: ${s.count} —Ä–∞–∑`)
                .join('\n')}
        `.trim();
    }

    static formatErrorMessage(error) {
        return `
            ‚ùå –û—à–∏–±–∫–∞
            
            –¢–∏–ø: ${error.type}
            –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}
            ${error.details ? `–î–µ—Ç–∞–ª–∏: ${error.details}` : ''}
        `.trim();
    }

    static formatNotificationMessage(notification) {
        const types = {
            appointment: 'üìÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–ø–∏—Å–∏',
            review: '‚≠êÔ∏è –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤',
            payment: 'üí∞ –û–ø–ª–∞—Ç–∞',
            system: '‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ'
        };

        return `
            ${types[notification.type] || 'üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ'}
            
            ${notification.message}
            
            ${notification.actionRequired ? 
                '‚ùóÔ∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ' : ''}
        `.trim();
    }
}

module.exports = MessageUtils; 