const { Scenes, Markup } = require("telegraf");
const userService = require("../../services/userService");
const { getMainMenuKeyboard } = require("../keyboards");

const switchRoleScene = new Scenes.BaseScene('switchRole');

switchRoleScene.enter(async (ctx) => {
    try {
        const user = await userService.getUserByTelegramId(ctx.from.id);
        if (!user) {
            await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.');
            return ctx.scene.leave();
        }

        const roles = await userService.getUserRoles(ctx.from.id);
        if (!roles || roles.length < 2) {
            await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–æ–ª–µ–π –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è.');
            return ctx.scene.leave();
        }

        await ctx.reply(
            '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:',
            Markup.keyboard([
                ['üë§ –†–µ–∂–∏–º –∫–ª–∏–µ–Ω—Ç–∞', 'üíº –†–µ–∂–∏–º –º–∞—Å—Ç–µ—Ä–∞'],
                ['‚ùå –û—Ç–º–µ–Ω–∞']
            ]).resize()
        );
    } catch (error) {
        console.error('Error in switchRoleScene enter:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        return ctx.scene.leave();
    }
});

switchRoleScene.hears(['üë§ –†–µ–∂–∏–º –∫–ª–∏–µ–Ω—Ç–∞', 'üíº –†–µ–∂–∏–º –º–∞—Å—Ç–µ—Ä–∞'], async (ctx) => {
    try {
        const choice = ctx.message.text;
        const role = choice === 'üë§ –†–µ–∂–∏–º –∫–ª–∏–µ–Ω—Ç–∞' ? 'client' : 'master';

        await userService.updateUserRole(ctx.from.id, role);
        ctx.session.currentRole = role;

        await ctx.reply(
            `–í—ã –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –≤ ${role === 'client' ? '—Ä–µ–∂–∏–º –∫–ª–∏–µ–Ω—Ç–∞' : '—Ä–µ–∂–∏–º –º–∞—Å—Ç–µ—Ä–∞'}!`,
            Markup.keyboard(getMainMenuKeyboard(role)).resize()
        );
        return ctx.scene.leave();
    } catch (error) {
        console.error('Error in role selection:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–æ–ª–∏.');
        return ctx.scene.leave();
    }
});

switchRoleScene.hears('‚ùå –û—Ç–º–µ–Ω–∞', async (ctx) => {
    await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.');
    return ctx.scene.leave();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
switchRoleScene.on('message', async (ctx) => {
    await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏.');
});

module.exports = switchRoleScene;
